LibDBQuery
==========


=== INTENTIONS ===
1) Base class for each row/record
2) Provide accessors to automatically store/update/insert data dependent on constructor used
3) Allow bulk transactions to interact with DB via DBTransaction
4) Provide a means to qualify the data that is stored in the DB (use unsafe version for retrieval)
5) All actions for a database are removed from the user. Only action is to "SaveData" or "Delete"


Ownership Tree
==============
-- libdbquery --
	DBConnection
		- Owns the DBConnection
	DBTransaction
		- Initialised from the DBConnection (separate class)
		- Owns a weak pointer to the DBResult objects
	DBResult
		- Owns a weak pointer to the transaction

-- Autogenerated Code --
	Schema
		- Creates the tables
		- Owns the tables

	Table (derived from DBResult)
		- raw data

CODE STRUCTURE
==============
//1. Create connection object
DBConnection dbc(<dbURL>);
//2. Connect to the database
dbc.connectDB();
//3. Build a transaction object
DBTransaction dbt(dbc);
//4. Create schema class
Schema sc(dbc, dbt);
//5. Initialise schema class
sc.initialise(dbc);
//6. Build our objects
tBody b1 = sc.gettbody(1)
//7. Modify data
b1.setName('derek');
//8. New data
sc.gtBody('NewElement');
//9. Commit Changes
dbt.saveTransaction()
